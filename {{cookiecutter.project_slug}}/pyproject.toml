[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.email }}>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "{{ cookiecutter.python_version }}"

[tool.poetry.group.dev.dependencies]
mypy = "*"
pre-commit = "*"
pytest = "*"
ruff = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py312"

select = [
	"A",   # flake8-builtins
	"ARG", # flake8-unused-arguments
	"B",   # flake8-bugbear
	"C4",  # flake8-comprehensions
	"D",   # pydocstyle
	"DTZ", # flake8-datetimez
	"E",   # pycodestyle errors
	"ERA", # eradicate
	"F",   # pyflakes
	"FURB",# refurb
	"I",   # isort
	"LOG", # flake8-logging
	"N",   # pep8-naming
	"PERF",# perflint
	"PIE", # flake8-pie
	"PL",  # pylint
	"PT",  # flake8-pytest-style
	"PTH", # flake8-use-pathlib
	"RUF", # ruff-specific rules
	"S",   # flake8-bandit
	"T10", # flake8-debugger
	"T20", # flake8-print
	"UP",  # pyupgrade
	"W",   # pycodestyle warnings
]
ignore = [ "D1" ] # pydocstyle missing docs

[tool.ruff.per-file-ignores]
"**/tests/**" = ["S101", "ARG002"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
strict = true
python_version = "3.12"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_errors = true
